<?php

return [
    'youAreRemovedFromProject' => "You're no longer PIC from event :project",
    'youAreRemovedFromProjectText' => "You just remove from event :project. Maybe you'll be given a new, bigger assignment",
    'projectPicHasBeenChanged' => 'PIC project has been changed',
    'successResign' => ':name is now inactive, all access has been withdrawn from the system.',
    'requestEntertainmentSuccess' => "Success request Entertainment Team. You'll be notified when its updated",
    'teamHasBeenDeterminedForTransfer' => 'Team has been determined and approved',
    'doNotHaveAppPermission' => 'You do not have any permission to access this application',
    'failedToGetTeams' => 'Failed to get teams',
    'notRegisteredAsUser' => 'Not registered as user',
    'successApproveAndChooseMemberTransfer' => 'Request is approved with custom team member',
    'qrcodeError' => 'QrCode is error',
    'unitRelationFound' => 'Cannot delete this unit because have relation to inventory',
    'inventoryTypeRelationFound' => 'Cannot delete this inventory type because have relation to inventory',
    'requestInventoryCreated' => 'Request is saved successfully. System will send a notification when there is a change.',
    'requestInventoryUpdated' => 'Request inventory has been updated',
    'requestInventoryHasBeenApproved' => 'Request inventory has been approved and are being processed',
    'requestInventoryHasBeenRejected' => 'Request inventory has been rejected',
    'successDeleteRequest' => 'Success delete request',
    'requestConvertedToInventory' => 'Inventory success converted to inventory',
    'userInventoryStored' => 'User Inventory has been successfully stored',
    'successAddUserInventory' => 'stock added successfully',
    'successUpdateUserInventory' => 'Success edit user inventory',
    'taskIsOnHold' => 'Task is now start to hold',
    'taskIsNowActive' => 'Task is now active',
    'logProjectCreated' => ':user create project :project',
    'logProjectAssignPic' => ':user assign :pic to event :project',
    'logProjectChangeStatus' => ':user change event :project status to :status',
    'cannotDeleteRoleBcsRelation' => 'Cannot delete role because it has relation to user',
    'successCreateBranch' => 'Success create new branch',
    'successUpdateBranch' => 'Success update branch',
    'successDeleteBranch' => 'Success delete branch',
    'cannotDeleteBranchBcsRelation' => 'Cannot delete branch because already have relation with the employee',
    'employeeNotFound' => 'Employee not found',
    'projectNotFound' => 'Project not found',
    'linkNameRequired' => 'Link name is required',
    'linkRequired' => 'Link is required',
    'linkOrFileRequired' => 'Link or files is required',
    'successCreateEmployee' => 'Success Create Employee',
    'successUpdateEmployee' => 'Success Update Employee',
    'successDeleteEmployee' => 'Success Delete Employee',
    'cannotDeleteEmployeeBcsRelation' => 'This employee still have ongoing event or tasks',
    'userAlreadyExists' => 'User already exists',
    'successChangePassword' => 'Success change user password',
    'songHasBeenAdded' => "Song has been added. You'll receive futher notification once its updated",
    'songNotFound' => 'Song is not found',
    'successUpdateSong' => 'Success update song',
    'successUpdateDistributedSong' => "Update will need Entertainment PM Approval. You'll be notified when its updated",
    'successDeleteSong' => 'Success delete song',
    'failedDeleteRequestEditSong' => 'Song is on approval process. Cannot be delete while this process is not done yet',
    'songHasBeenDistributed' => 'Song has been distributed',
    'employeeRequired' => 'Employee is required',
    'employeeAlreadyAssignedForThisSong' => ':name already assinged for this song',
    'successSubtituteSongPic' => 'Success to change the PIC',
    'songHasBeenEdited' => 'Song has been successfully update',
    'requestEditSongHasBeenRejected' => 'Request edit song is rejected',
    'duplicateSongOnBulkAssign' => 'There was duplicate song on some users. Please remove the duplicate before continue.',
    'startWorkNow' => 'You can now start work on this task',
    'songAlreadyInProgress' => 'Music is already in progress',
    'failedToUploadImage' => 'Failed to upload image',
    'songHaveNoTask' => 'Song have no task',
    'taskAlreadyBeingChecked' => 'Tasks are already in the process of being checked by PM',
    'songAlreadyApproved' => 'This song is already approved',
    'taskSongHasBeenApproved' => 'Song has been approved',
    'failedToAproveTask' => 'Failed to approve task',
    'entertainmentPMShouldCheckThisFirst' => 'PM Entertainment should check this first',
    'successReviseSong' => 'Success revise this JB',
    'songAlreadyOnRevise' => 'This song has been already on revise',
    'songCannotBeRevise' => 'Song cannot be revise yet',
    'cannotCombineModeller' => 'Cannot combine members with lead modelers',
    'taskHasBeenDistribute' => 'Task has been distribute',
    'memberHasBeedRemoved' => 'Member has been removed',
    'memberAdded' => 'Members has been assign to task',
    'toManyUnfinishedTask' => 'To many tasks to complete, please complete manually',
    'failedSaveToTalenta' => 'Failed to save data to talenta',
    'resignationHasBeenCanceled' => 'Resignation has been canceled',
    'successCreateProjectDeals' => 'Success create project deals',
    'successCreateTransaction' => 'Success create transaction',
    'quotationNotFound' => 'Quotation is not found',
    'quotationIsNotFinal' => 'Quotation is not final yet',
    'quotationAlreadyFinal' => 'Project already have final quotation',
    'paymentAmountShouldBeSmallerThanRemainingAmount' => 'Payment amount should not greater than remaining amount',
    'successPublishProjectDeal' => 'Project deal has been published',
    'successDeleteProjectDeal' => 'Project deal has been deleted',
    'successUpdateProjectDeals' => 'Event and quotation has been updated',
    'successAddQuotation' => 'Quotation has beed added successfully',
    'successCreateQuotationItem' => 'Quotation item has been created successfully',
    'updateQuotationItemSuccess' => 'Quotation item has been updated successfully',
    'cannotCreateInvoiceIfYouHaveAnotherUnpaidInovice' => 'Cannot create invoice if you have another unpaid invoice',
    'successCreateDueReason' => 'Success create deadline due reason',
    'successUpdateDueReason' => 'Success update deadline due reason',
    'successDeleteDueReason' => 'Success delete deadline due reason',
    'noChangesToApprove' => 'No changes to approve',
    'successDeleteInvoice' => 'Success delete invoice',
    'cannotDeletePaidInvoice' => 'Cannot delete paid invoice',
    'successRequestInvoiceChanges' => 'The invoice change request has been submitted. You will receive an update via email',
    'successApproveInvoiceChanges' => 'Successfully approved the invoice change',
    'successRejectInvoiceChanges' => 'Successfully rejected the invoice change',
    'projectDealHasBeenCanceled' => 'Event has been canceled',
    'eventCannotBeCancel' => 'Event cannot be canceled',
    'eventHasBeenCancelBecause' => 'Event have been cancel because :reason',
    'successCreateDevelopmentProject' => 'Development project has been created successfully',
    'successDeleteDevelopmentProject' => 'Development project has been deleted successfully',
    'successUpdateDevelopmentProject' => 'Development project has been updated successfully',
    'successCreateTask' => 'Task has been created successfully',
    'errorUploadTaskImage' => 'Failed to upload task image',
    'successAssignPicToTask' => 'Successfully assigned PIC to task',
    'successAddDeadline' => 'Successfully assigned new deadline to task',
    'attachmentHasBeenDeleted' => 'Attachment has been deleted successfully',
    'successDeleteTask' => 'Task has been deleted successfully',
    'taskHasBeenApproved' => 'Task has been approved successfully',
    'taskHasBeenHold' => 'Task has been hold successfully',
    'taskHasBeenStartedAgain' => 'Task has been started again',
    'taskSubmitted' => 'Task has been submitted successfully',
    'taskHasBeenComplete' => 'Task has been complete',
    'revisedHasBeenSubmitted' => 'Task revision has been submitted successfully',
    'successAddReference' => 'Reference has been added successfully',
    'referenceHasBeenDeleted' => 'Reference has been deleted successfully',
    'successAddAttachment' => 'Attachment has been added successfully',
    'successUpdateDeadline' => 'Deadline has been updated successfully',
    'pleaseCompleteAllTasksManually' => 'Please complete all tasks manually, then continue to complete the project.',
    'projectHasBeenCompleted' => 'Project has been completed successfully',
    'cannotCancelResignationInactiveOrDeleted' => 'Cannot cancel resignation for inactive or deleted employees',
    'resignHasBeenOnScheduled' => 'The resignation date has been registered, and the status will automatically change on the specified date.',
    'employeeHasOngoingTasks' => 'Employee has ongoing tasks that need to be completed before resignation can be processed.',
    'projectDealHasChildInvoicesOrTransactions' => 'Project deal already has child invoices or transactions',
    'requestPriceChangesSuccess' => 'Request for price changes has been sent successfully. You will receive a notification once it is updated.',
    'successApprovePriceChanges' => 'Price changes approved successfully.',
    'successRejectPriceChanges' => 'Price changes rejected successfully.',
    'waitingForApproval' => 'Waiting for approval',
    'successAddInteractiveRequestAndWaitingApproval' => 'Interactive request has been added successfully and is pending approval from the Director.',
    'eventAlreadyHaveInteractiveRequest' => 'Event already has an interactive request',
    'successApproveInteractiveRequest' => 'Interactive request has been approved successfully',
    'successRejectInteractiveRequest' => 'Interactive request has been rejected successfully',
    'interactiveRequestAlreadyProcessed' => 'This interactive request has already been processed',
    'successUpdateDescription' => 'Description has been updated successfully',
    'taskAlreadyApproved' => 'Task is already approved',
    'taskCannotBeApproved' => 'Task cannot be approved yet',
    'youAreNotAllowedToApproveThisTask' => 'You are not allowed to approve this task',
];
