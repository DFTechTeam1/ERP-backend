name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.1

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to dev via rsync
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            BACKUP_DIR="/var/www/apps/backup/backend_staging_$TIMESTAMP"
            mkdir -p $BACKUP_DIR
            cp -r /var/www/apps/backend.dfactory.pro/* $BACKUP_DIR/
            echo "$BACKUP_DIR" > /var/www/apps/backup/backend_staging_last_backup_path_dev.txt
          EOF

          rsync -avz --delete             --exclude-from='.github/workflows/.rsync-exclude'             --exclude='.env'             --log-file=rsync-log-dev.txt             -e "ssh -o StrictHostKeyChecking=no"             ./ ${{ secrets.SSH_USER }}@${{ secrets.VPS_IP }}:/var/www/apps/backend.dfactory.pro || exit 1
          sleep 3

      - name: Upload rsync log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rsync-log-dev
          path: rsync-log-dev.txt

      - name: Post-deployment Laravel tasks (dev)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            cd /var/www/apps/backend.dfactory.pro

            echo "ðŸ”§ Creating storage folders..."
            mkdir -p storage/framework/cache storage/framework/sessions storage/framework/views storage/logs

            echo "ðŸ§¼ Cleaning Laravel cache..."
            rm -rf bootstrap/cache/*.php

            echo "ðŸ“¦ Running composer install..."
            composer install --no-interaction --prefer-dist --optimize-autoloader

            echo "ðŸš€ Artisan rebuild"
            php artisan clear-compiled || true
            php artisan package:discover --ansi
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan migrate --force
            php artisan queue:restart

          EOF

  rollback-dev:
    needs: deploy-dev
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Restore from dev backup
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            if [ -f /var/www/apps/backup/backend_staging_last_backup_path_dev.txt ]; then
              BACKUP_DIR=$(cat /var/www/apps/backup/backend_staging_last_backup_path_dev.txt)
              cp -r $BACKUP_DIR/* /var/www/apps/backend.dfactory.pro/
              chown -R www-data:www-data /var/www/apps/backend.dfactory.pro
            else
              echo "No backup path found. Rollback skipped."
            fi
          EOF